connection.impl=org.n3r.eql.dbfieldcryptor.EqlSecretFieldsConnectionProxy
proxy.connection.impl=org.n3r.eql.trans.EqlJndiConnection

# must implements SecretFieldsConfigable
secret.fields.configable.impl=org.n3r.eql.dbfieldcryptor.refer.ReferSecretFieldsConfig
# must implements SensitiveCryptor
sensitive.cryptor.impl=org.n3r.eql.dbfieldcryptor.refer.ReferSensitiveCryptor

#transactionType=JTA
jndiName=demo
java.naming.factory.initial=weblogic.jndi.WLInitialContextFactory
java.naming.provider.url=t3://127.0.0.1:7001/

#proxy.connection.impl=org.n3r.eql.trans.EqlSimpleConnection
#driver=oracle.jdbc.driver.OracleDriver
#url=jdbc:oracle:thin:@127.0.0.1:1521:orcl
#user=orcl
#password=orcl

securetDatabaseFields.password=b82638ED6cB98594

#加密字段长度扩容计算公式提供如下，最小要44个字节，其他可以根据公式来算，或者直接两倍。
#public static int computeLength(int clearLen) {
#   int cipherLen = (clearLen / 16 + 1) * 16;
#   int base64 = (cipherLen + 2 - ((cipherLen + 2) % 3)) / 3 * 4;
#   return base64;
#}
#public static void main(String[] args) {
#   System.out.println(computeLength(18)); // 44
#   System.out.println(computeLength(20)); // 44
#   System.out.println(computeLength(32)); // 64
#   System.out.println(computeLength(50)); // 88
#   System.out.println(computeLength(100)); // 152
#}

# 用于配置数据库表中需要加解密的字段，和存储过程中需要加解密的参数序号
# 1.各个字段用空格分隔
# 2.数据库字段：表名.字段名
# 3.存储过程：存储过程名.参数的序号(序号从1开始)
# 注意: 每行行末续行符反斜杠前添加至少一个空白字符（后面续行的前导空白会被自动去除）
securetDatabaseFields.define= \
  EQL_SECRET_TEST.C \
  EQL_SECRET_TEST.B